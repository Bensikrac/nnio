plugins {
  id 'java-library'
  id 'maven-publish'
  id 'signing'
  id 'io.github.gradle-nexus.publish-plugin' version '1.3.0'
}

repositories {
  mavenCentral()
}

dependencies {
  testImplementation 'junit:junit:4.13.1'
}

tasks.register('filter', Copy) {
  from sourceSets.test.java
  exclude('**/*Base.java')
  into layout.buildDirectory.dir('generated-src/test/java')

  rename '(.+)Test.java', 'Generated$1Test.java'

  filter { String line ->
    line.replaceAll(/^import java\.nio\.(file)\.(.+);/) { fullMatch, nioPkg, subPkgs ->
      return "import org.lukhnos.nnio.$nioPkg.$subPkgs;"
    }
  }

  filter { String line ->
    line.replaceAll(/public class (\w+Test) (.+?)\{/) { fullMatch, cls, rest ->
      return "public class Generated$cls $rest {"
    }
  }
}

compileTestJava {
  source filter.outputs.files, sourceSets.test.java
}

java {
    withJavadocJar()
    withSourcesJar()
    // try-with-resources are used, hence 1.7.
    sourceCompatibility = "1.7"
    targetCompatibility = "1.7"
}

publishing {
  publications {
    mavenJava(MavenPublication) {
      from(components.java)

      pom {
        name = 'nnio'
        description = 'A substitute library for NIO.2'
        url = 'https://github.com/lukhnos/nnio'
        licenses {
          license {
            name = 'The Apache License, Version 2.0'
            url = 'https://www.apache.org/licenses/LICENSE-2.0.txt'
          }
        }
        developers {
          developer {
            id = 'lukhnos'
            name = 'Lukhnos Liu'
            email = 'lukhnos@lukhnos.org'
          }
        }
        scm {
          connection = 'scm:git:git://github.com/lukhnos/nnio.git'
          developerConnection = 'scm:git:git@github.com:lukhnos/nnio.git'
          url = 'https://github.com/lukhnos/nnio'
        }
      }
    }
  }
}

nexusPublishing {
  repositories {
    // For auth settings, see
    // https://github.com/gradle-nexus/publish-plugin?tab=readme-ov-file#publishing-to-maven-central-via-sonatype-ossrh
    sonatype()
  }
}

signing {
  useGpgCmd()
  sign publishing.publications.mavenJava
}
